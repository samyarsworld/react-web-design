{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => response.json()).then(dishes => dispatch(addDishes(dishes)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errMess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errMess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(commments => dispatch(addComments(commments))).catch(error => dispatch(commentsFaild(error)));\n};\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const commentsFaild = errMess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errMess\n});\nexport const fetchPromos = () => dispatch => {\n  return fetch(baseUrl + 'promotions').then(response => response.json()).then(promos => dispatch(addPromos(promos)));\n};\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\nexport const promosFaild = errMess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errMess\n});\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});","map":{"version":3,"names":["ActionTypes","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","json","dishes","addDishes","DISHES_LOADING","dishesFailed","errMess","DISHES_FAILED","ADD_DISHES","fetchComments","ok","error","Error","status","statusText","errmess","message","commments","addComments","catch","commentsFaild","comments","ADD_COMMENTS","COMMENTS_FAILED","fetchPromos","promos","addPromos","ADD_PROMOS","promosFaild","PROMOS_FAILED","promosLoading","PROMOS_LOADING"],"sources":["/home/samyarsworld/Desktop/first-react-project/fetch-json-server/react-web-design/src/redux/ActionCreators.js"],"sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from '../shared/baseUrl';\n\n\n\n\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\n\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)));\n};\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errMess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errMess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(commments => dispatch(addComments(commments)))\n        .catch(error => dispatch(commentsFaild(error)));\n};\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const commentsFaild = (errMess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\n\n\nexport const fetchPromos = () => (dispatch) => {\n    return fetch(baseUrl + 'promotions')\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)));\n};\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const promosFaild = (errMess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errMess\n});\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}