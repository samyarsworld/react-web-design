{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errMess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errMess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(commments => dispatch(addComments(commments))).catch(error => dispatch(commentsFaild(error)));\n};\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const commentsFaild = errMess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errMess\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\nexport const promosFailed = errMess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errMess\n});\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});","map":{"version":3,"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","message","alert","fetchDishes","dishesLoading","errmess","dishes","addDishes","dishesFailed","DISHES_LOADING","errMess","DISHES_FAILED","ADD_DISHES","fetchComments","commments","addComments","commentsFaild","comments","ADD_COMMENTS","COMMENTS_FAILED","fetchPromos","promosLoading","promos","addPromos","promosFailed","ADD_PROMOS","PROMOS_FAILED","PROMOS_LOADING"],"sources":["/home/samyarsworld/Desktop/first-react-project/fetch-json-server/react-web-design/src/redux/ActionCreators.js"],"sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from '../shared/baseUrl';\n\n\n\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\n};\n\n\n\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errMess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errMess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(commments => dispatch(addComments(commments)))\n        .catch(error => dispatch(commentsFaild(error)));\n};\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const commentsFaild = (errMess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\n\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n};\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const promosFailed = (errMess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errMess\n});\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}